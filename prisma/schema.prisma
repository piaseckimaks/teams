generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Test {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  firstname String @db.VarChar(30)
}

model Users {
  id                                  Int        @id @default(autoincrement()) @db.UnsignedInt
  firstname                           String     @db.VarChar(30)
  lastname                            String     @db.VarChar(30)
  email                               String     @unique(map: "email") @db.VarChar(50)
  hashed_password                     String     @db.VarChar(128)
  salt                                String     @db.VarChar(128)
  reg_date                            DateTime?  @default(now()) @db.Timestamp(0)
  avatar                              Avatar?
  Messages_Messages_receiverIdToUsers Messages[] @relation("Messages_receiverIdToUsers")
  Messages_Messages_senderIdToUsers   Messages[] @relation("Messages_senderIdToUsers")
}

model Messages {
  id                               Int    @id @default(autoincrement()) @db.UnsignedInt
  content                          String @db.Text
  senderId                         Int    @db.UnsignedInt
  receiverId                       Int    @db.UnsignedInt
  Users_Messages_receiverIdToUsers Users  @relation("Messages_receiverIdToUsers", fields: [receiverId], references: [id])
  Users_Messages_senderIdToUsers   Users  @relation("Messages_senderIdToUsers", fields: [senderId], references: [id])

  @@index([receiverId], map: "Messages_receiverId_fkey")
  @@index([senderId], map: "Messages_senderId_fkey")
}

model Avatar {
    id      Int     @id @default(autoincrement()) @db.UnsignedInt
    avatar  String  @db.Text
    user    Users   @relation(fields: [userId], references: [id])
    userId  Int     @db.UnsignedInt
}